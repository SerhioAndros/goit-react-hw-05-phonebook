{"version":3,"sources":["components/App.module.css","components/filter/Filter.module.css","components/contactList/ContactList.module.css","redux/contacts-types.js","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/contactListItem/ContactListItem.module.css"],"names":["module","exports","ADD","DELETE","addContact","createAction","name","number","payload","id","uuid","deleteContact","filterContacts","contactItems","createReducer","state","filter","contactFilter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ContactForm","handleInputChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","trim","map","contact","includes","alert","onSubmit","uniqueIdName","uniqueIdNumber","this","className","styles","addContactForm","htmlFor","addContactFormLabel","addContactFormInput","type","pattern","title","onChange","placeholder","addContactFormBtn","Component","connect","dispatch","object","ContactListItem","onDeleteContact","contactItem","contactName","contactNumber","deleteContactBtn","onClick","allContacts","filterNormilized","toLowerCase","toLocaleLowerCase","handleFilter","contactId","contactList","target","filterInputLabel","filterInput","App","container","mainHeader","additionalHeader","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.db4306f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2DufN\",\"mainHeader\":\"App_mainHeader__3uHOo\",\"additionalHeader\":\"App_additionalHeader__2B-nl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInputLabel\":\"Filter_filterInputLabel__19woJ\",\"filterInput\":\"Filter_filterInput__3dKIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3ObZU\"};","const ADD = \"phonebook/addContact\";\r\nconst DELETE = \"phonebook/deleteContact\";\r\nconst FILTER = \"phonebook/filterContacts\";\r\n\r\nexport { ADD, DELETE, FILTER };\r\n","import { ADD, DELETE, FILTER } from \"./contacts-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst addContact = createAction(ADD, ({ name, number }) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(DELETE);\r\n\r\nconst filterContacts = createAction(FILTER);\r\n\r\nexport { addContact, deleteContact, filterContacts };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport { ADD, DELETE } from \"./contacts-types\";\r\nimport { filterContacts } from \"./contacts-actions\";\r\n\r\nconst contactsList = [\r\n  {\r\n    id: \"5111c54c-addb-481a-a52d-4c060aae7b87\",\r\n    name: \"Harry Potter\",\r\n    number: \"459-12-56\",\r\n  },\r\n  {\r\n    id: \"3f0a3b82-8cb3-4b7e-ad87-6128ce7c1ed4\",\r\n    name: \"Hermione Granger\",\r\n    number: \"443-89-12\",\r\n  },\r\n  {\r\n    id: \"30e9db78-1eca-4250-8c4c-db9087e6819e\",\r\n    name: \"Ron Wisley\",\r\n    number: \"645-17-79\",\r\n  },\r\n  {\r\n    id: \"5111c54c-addb-481a-a52d-4c06bfg56b87\",\r\n    name: \"Nevil Longbottom\",\r\n    number: \"455-46-64\",\r\n  },\r\n];\r\n\r\nconst contactItems = createReducer(contactsList, {\r\n  [ADD]: (state, { payload }) => [...state, payload],\r\n  [DELETE]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst contactFilter = createReducer(\"\", {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ contactItems, contactFilter });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport contactsReducer from \"./contacts-reducer\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"userContacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts-actions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contacts = this.props.contacts;\r\n    if (!name.trim() || !number.trim())\r\n      return alert(\"You've missed something :)\");\r\n    if (contacts.map((contact) => contact.name).includes(name.trim()))\r\n      return alert(`\"${name.trim()}\" is already in contacts`);\r\n    if (contacts.map((contact) => contact.number).includes(number.trim()))\r\n      return alert(`\"${number.trim()}\" is already in contacts`);\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const uniqueIdName = uuid();\r\n    const uniqueIdNumber = uuid();\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.addContactForm}>\r\n        <label htmlFor={uniqueIdName} className={styles.addContactFormLabel}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={styles.addContactFormInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id={uniqueIdName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          // required\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Name\"\r\n        />\r\n        <label htmlFor={uniqueIdNumber} className={styles.addContactFormLabel}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={styles.addContactFormInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id={uniqueIdNumber}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          // required\r\n          value={this.state.number}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Tel. number\"\r\n        />\r\n\r\n        <button type=\"submit\" className={styles.addContactFormBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.contactItems,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (object) => dispatch(addContact(object)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => (\r\n  <li className={styles.contactItem}>\r\n    <p className={styles.contactName}>\r\n      {name}: <span className={styles.contactNumber}>{number}</span>\r\n    </p>\r\n    <button\r\n      className={styles.deleteContactBtn}\r\n      type=\"button\"\r\n      onClick={() => onDeleteContact(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts-actions\";\r\n\r\nconst ContactList = ({ contacts, onClick }) => (\r\n  <ul className={styles.contactList}>\r\n    {contacts.map((contact) => (\r\n      <ContactListItem\r\n        key={contact.id}\r\n        id={contact.id}\r\n        name={contact.name}\r\n        number={contact.number}\r\n        onDeleteContact={onClick}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst handleFilter = (allContacts, filter) => {\r\n  const filterNormilized = filter.toLowerCase().trim();\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLocaleLowerCase().trim().includes(filterNormilized)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { contactItems, contactFilter } = state.contacts;\r\n  if (!contactFilter) {\r\n    return { contacts: contactItems };\r\n  }\r\n  const filteredContacts = handleFilter(contactItems, contactFilter);\r\n  return { contacts: filteredContacts };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClick: (contactId) => dispatch(deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/contacts-actions\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <label className={styles.filterInputLabel}>Find contacts by name</label>\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"Contact\"\r\n    />\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.contactFilter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (evt) => dispatch(filterContacts(evt.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\n\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nconst App = () => (\r\n  <div className={styles.container}>\r\n    <h1 className={styles.mainHeader}>Phonebook</h1>\r\n    <ContactForm />\r\n    <h2 className={styles.additionalHeader}>Contacts</h2>\r\n\r\n    <Filter />\r\n    <ContactList />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport store from \"./redux/store.js\";\nimport \"./styles.css\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"ContactForm_addContactForm__3OHk5\",\"addContactFormLabel\":\"ContactForm_addContactFormLabel__2xHY2\",\"addContactFormInput\":\"ContactForm_addContactFormInput__3DVzg\",\"addContactFormBtn\":\"ContactForm_addContactFormBtn__3Zn61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__1Ok6f\",\"contactName\":\"ContactListItem_contactName__7VZSZ\",\"contactNumber\":\"ContactListItem_contactNumber___-ju-\",\"deleteContactBtn\":\"ContactListItem_deleteContactBtn__NGMUb\"};"],"sourceRoot":""}